buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.0.0'
        classpath 'com.adarshr:gradle-test-logger-plugin:2.1.0'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
    id "me.champeau.gradle.jmh" version "0.5.3"
}

apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.adarshr.test-logger'
apply plugin: 'me.champeau.gradle.jmh'

group 'io.digital-magic'
version '1.0'

testlogger {
    theme 'standard-parallel'
    showExceptions true
    showStackTraces true
    showFullStackTraces false
    showCauses true
    slowThreshold 2000
    showSummary true
    showSimpleNames false
    showPassed true
    showSkipped true
    showFailed true
    showStandardStreams true
    showPassedStandardStreams false
    showSkippedStandardStreams false
    showFailedStandardStreams true
    logLevel 'lifecycle'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "11"
    }
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src/main/kotlin']
    test.kotlin.srcDirs = test.java.srcDirs = ['src/test/kotlin']
    main.resources.srcDirs = ['src/main/resources']
    test.resources.srcDirs = ['src/test/resources']
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    //implementation "org.javamoney:moneta:$moneta_version"

    // FP
    implementation "io.arrow-kt:arrow-core-data:$arrow_version"
    implementation "io.arrow-kt:arrow-fx:$arrow_version"

    // JSON serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlin_serialization_version"
    implementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
    implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-base:$jackson_version"
    implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jackson_version"
    implementation "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:$jackson_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jackson_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
    //implementation "org.zalando:jackson-datatype-money:${jackson_datatype_money_version}"

    // DI
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-ktor:$koin_version"
    testImplementation "org.koin:koin-test:$koin_version"

    // http server
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-server-host-common:$ktor_version"
    implementation "io.ktor:ktor-server-sessions:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
    implementation "io.ktor:ktor-auth-jwt:$ktor_version"
    implementation "io.ktor:ktor-locations:$ktor_version"
    implementation "io.ktor:ktor-metrics-micrometer:$ktor_version"

    testImplementation "io.ktor:ktor-server-tests:$ktor_version"

    // logging
    api "org.slf4j:slf4j-api:$slf4j_version"
    implementation "org.slf4j:jul-to-slf4j:$slf4j_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"

    // db layer
    implementation "org.jetbrains.exposed:exposed-core:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-dao:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-java-time:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-money:$exposed_version"
    implementation "org.postgresql:postgresql:$postgresql_version"
    implementation "com.zaxxer:HikariCP:$hikari_version"
    implementation "org.liquibase:liquibase-core:$liquibase_version"
    testImplementation "com.h2database:h2:$h2_version"
    testImplementation "org.testcontainers:testcontainers:$testcontainers_version"

    jmh "org.openjdk.jmh:jmh-core:$jmh_version"
    jmh "org.openjdk.jmh:jmh-generator-annprocess:$jmh_version"
}
